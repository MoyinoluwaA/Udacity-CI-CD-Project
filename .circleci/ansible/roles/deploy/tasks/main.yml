---
- name: "update apt packages."
  become: true
  apt:
    update_cache: yes

- name: "upgrade packages"
  become: true
  apt:
    upgrade: yes
  
- name: Install the gpg key for nodejs 13
  apt_key:
    url: "https://deb.nodesource.com/gpgkey/nodesource.gpg.key"
    state: present
    
- name: Install the nodejs 13 repos
  apt_repository:
    repo: "deb https://deb.nodesource.com/node_13.x {{ ansible_distribution_release }} main"
    state: present
    update_cache: yes

- name: "install nodejs"
  become: true
  apt:
    name: nodejs
    update_cache: yes

- name: "install dependencies."
  become: true
  apt:
    name: ["tar"]
    state: latest
    update_cache: yes
  

- name: "install pm2"
  become: true
  npm:
    name: pm2
    global: yes
    production: yes
    state: present

- name: "Creates backend app directory"
  become: true
  file:
    path: /home/ubuntu/backend
    state: directory
    mode: 0755

- name: "Copy artifact to backend directory"
  copy:
    src: artifact.tar.gz
    dest: /home/ubuntu/backend/artifact.tar.gz
    backup: yes

- name: "Unarchive files"
  unarchive:
    src: artifact.tar.gz
    dest: /home/ubuntu/backend

- name: "Executing Node app with PM2"
  # Get the environment variables from CircleCI and add to the EC2 instance
  environment:
    NODE_ENV: production
    VERSION: "1"
    TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION')}}"  
    TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES')}}"
    TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST')}}"
    TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT')}}"
    TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME')}}"
    TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD')}}"
    TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE')}}"
    TYPEORM_MIGRATIONS: "{{ lookup('env', 'TYPEORM_MIGRATIONS')}}"
    TYPEORM_MIGRATIONS_DIR: "{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR')}}"
  shell: |
    cd /home/ubuntu/backend
    pm2 stop default
    pm2 start npm -- run "start:dev"
    pm2 ls
  register: execute_node


- name: print message
  debug:
    msg: "{{ execute_node.stdout_lines }}"

- name: "Configure pm2 to start as service"
  become: true
  shell: |
    env PATH=$PATH:/usr/local/bin pm2 startup systemd -u ubuntu --hp /home/ubuntu
